{"version":3,"sources":["components/Overview.js","App.js","index.js"],"names":["Overview","props","deleteTask","e","startEdit","handleEdit","onSubmitEdit","id","this","tasks","map","task","listItemContents","beingEdited","num","className","onClick","text","type","onSubmit","value","onChange","React","Component","App","handleChange","setState","state","target","onSubmitTask","preventDefault","oldNum","uniqid","index","parentNode","oldTasks","newTasks","slice","Number","deletedId","i","length","concat","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA6DeA,E,kDAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,WAAa,SAACC,GACV,EAAKF,MAAMC,WAAWC,IALP,EAQnBC,UAAY,SAACD,GACT,EAAKF,MAAMG,UAAUD,IATN,EAYnBE,WAAa,SAACF,GACV,EAAKF,MAAMI,WAAWF,IAbP,EAgBnBG,aAAe,SAACH,GACZ,EAAKF,MAAMK,aAAaH,IAjBT,E,0CAqBnB,WAAU,IAAD,OACL,OACI,oBAAII,GAAG,gBAAP,SACKC,KAAKP,MAAMQ,MAAMC,KAAI,SAACC,GACnB,IAAIC,EAqBJ,OAlBIA,EADoB,GAApBD,EAAKE,YAED,sBAAKN,GAAII,EAAKG,IAAKC,UAAU,mBAA7B,UACI,qBAAKA,UAAU,UAAUC,QAAS,EAAKd,WAAvC,oBACA,sBAAKa,UAAU,UAAf,UAA0BJ,EAAKG,IAA/B,OACA,qBAAKC,UAAU,WAAf,SAA2BJ,EAAKM,OAChC,wBAAQF,UAAU,aAAaG,KAAK,SAASF,QAAS,EAAKZ,UAA3D,qBAKJ,uBAAMG,GAAII,EAAKG,IAAKC,UAAU,mBAAmBI,SAAU,EAAKb,aAAhE,UACI,qBAAKU,QAAS,EAAKd,WAAnB,oBACA,uBAAOkB,MAAOT,EAAKM,KAAMC,KAAK,OAAOG,SAAU,EAAKhB,aACpD,wBAAQa,KAAK,SAAb,uBAMZ,oBAAkBX,GAAII,EAAKJ,GAAIQ,UAAU,WAAzC,SACKH,GADID,EAAKJ,a,GAhDXe,IAAMC,WC+JdC,G,wDA5Jb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAACtB,GACd,EAAKuB,SAAS,CACZf,KAAM,CACJG,IAAK,EAAKa,MAAMhB,KAAKG,IACrBG,KAAMd,EAAEyB,OAAOR,MACfb,GAAI,EAAKoB,MAAMhB,KAAKJ,OAnBZ,EAwBdsB,aAAe,SAAC1B,GACdA,EAAE2B,iBACF,IAAMC,EAAS,EAAKJ,MAAMhB,KAAKG,IAE/B,EAAKY,SAAS,CACZjB,MAAM,GAAD,mBAAM,EAAKkB,MAAMlB,OAAjB,CAAwB,EAAKkB,MAAMhB,OACxCA,KAAM,CACJG,IAAKiB,EAAS,EACdd,KAAM,GACNV,GAAIyB,MACJnB,aAAa,MAlCL,EAuCdT,UAAY,SAACD,GACX,IACM8B,EADgB9B,EAAEyB,OAAOM,WAAW3B,GACZ,EACxBI,EAAO,EAAKgB,MAAMlB,MAAMwB,GAE9BtB,EAAKE,aAAc,EAEnB,IAAMsB,EAAW,EAAKR,MAAMlB,MACtB2B,EAAQ,sBAAOD,EAASE,MAAM,EAAGJ,IAAzB,CAAiCtB,GAAjC,YAA0CwB,EAASE,MAAMJ,EAAQ,KAE/E,EAAKP,SAAS,CACZjB,MAAO2B,KAlDG,EAsDd/B,WAAa,SAACF,GACZ,IACM8B,EADgBK,OAAOnC,EAAEyB,OAAOM,WAAW3B,IACnB,EACxBI,EAAO,EAAKgB,MAAMlB,MAAMwB,GAE9BtB,EAAKM,KAAOd,EAAEyB,OAAOR,MAErB,IAAMe,EAAW,EAAKR,MAAMlB,MACtB2B,EAAQ,sBAAOD,EAASE,MAAM,EAAGJ,IAAzB,CAAiCtB,GAAjC,YAA0CwB,EAASE,MAAMJ,EAAQ,KAE/E,EAAKP,SAAS,CACZjB,MAAO2B,KAjEG,EAqEd9B,aAAe,SAACH,GACdA,EAAE2B,iBACF,IACMG,EADgBK,OAAOnC,EAAEyB,OAAOrB,IACR,EACxBI,EAAO,EAAKgB,MAAMlB,MAAMwB,GAE9BtB,EAAKE,aAAc,EAEnB,IAAMsB,EAAW,EAAKR,MAAMlB,MACtB2B,EAAQ,sBAAOD,EAASE,MAAM,EAAGJ,IAAzB,CAAiCtB,GAAjC,YAA0CwB,EAASE,MAAMJ,EAAQ,KAE/E,EAAKP,SAAS,CACZjB,MAAO2B,KAjFG,EAqFdlC,WAAa,SAACC,GAMZ,IALA,IAAMoC,EAAYpC,EAAEyB,OAAOM,WAAWA,WAAW3B,GAC7C6B,EAAW,GAINI,EAAI,EAAGA,EAAI,EAAKb,MAAMlB,MAAMgC,OAAQD,IAAK,CAChD,IAAM7B,EAAO,EAAKgB,MAAMlB,MAAM+B,GAEP,GAAnBJ,EAASK,OACX9B,EAAKG,IAAM,EAEXH,EAAKG,IAAMsB,EAASA,EAASK,OAAS,GAAG3B,IAAM,EAG7CH,EAAKJ,IAAMgC,IAGbH,EAAWA,EAASM,OAAO/B,IAKR,GAAnByB,EAASK,OACX,EAAKf,SAAS,CACZjB,MAAO,GACPE,KAAM,CACJG,IAAK,EACLG,KAAM,EAAKU,MAAMhB,KAAKM,KACtBV,GAAI,EAAKoB,MAAMhB,KAAKJ,MAIxB,EAAKmB,SAAS,CACZjB,MAAO2B,EACPzB,KAAM,CACJG,IAAKsB,EAASA,EAASK,OAAS,GAAG3B,IAAM,EACzCG,KAAM,EAAKU,MAAMhB,KAAKM,KACtBV,GAAI,EAAKoB,MAAMhB,KAAKJ,OAxH1B,EAAKoB,MAAQ,CACXhB,KAAM,CACJG,IAAK,EACLG,KAAM,GACNV,GAAIyB,MACJnB,aAAa,GAEfJ,MAAO,IAVG,E,0CAiId,WACE,OACE,sBAAKF,GAAG,OAAR,UACE,gDACA,uEACA,uBAAMA,GAAG,WAAWY,SAAUX,KAAKqB,aAAnC,UACE,uBAAOc,QAAQ,YAAf,yBACA,uBACEtB,SAAUb,KAAKiB,aACfL,MAAOZ,KAAKmB,MAAMhB,KAAKM,KACvBC,KAAK,OACLX,GAAG,cAEL,wBAAQA,GAAG,gBAAgBW,KAAK,SAAhC,yBAEF,cAAC,EAAD,CACET,MAAOD,KAAKmB,MAAMlB,MAClBP,WAAYM,KAAKN,WACjBE,UAAWI,KAAKJ,UAChBC,WAAYG,KAAKH,WACjBC,aAAcE,KAAKF,sB,GAtJXgB,IAAMC,YCDxBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f283a36.chunk.js","sourcesContent":["import React from 'react';\nimport './Overview.css'\n\nclass Overview extends React.Component {\n    constructor(props) {\n        super(props);\n    };\n\n    deleteTask = (e) => {\n        this.props.deleteTask(e)\n    }\n\n    startEdit = (e) => {\n        this.props.startEdit(e)\n    }\n\n    handleEdit = (e) => {\n        this.props.handleEdit(e)\n    }\n\n    onSubmitEdit = (e) => {\n        this.props.onSubmitEdit(e)\n    }\n    /* margin-top: 30px; */\n\n    render() {\n        return (\n            <ul id='unorderedList'>\n                {this.props.tasks.map((task) => {\n                    let listItemContents;\n\n                    if (task.beingEdited != true) {\n                        listItemContents = (\n                            <div id={task.num} className='listItemContents'>\n                                <div className='xButton' onClick={this.deleteTask}>✕</div>\n                                <div className='taskNum'>{task.num}:</div>\n                                <div className='taskText'>{task.text}</div>\n                                <button className='editButton' type='button' onClick={this.startEdit}>edit</button>\n                            </div>\n                        )    \n                    } else {\n                        listItemContents = (\n                            <form id={task.num} className='listItemContents' onSubmit={this.onSubmitEdit}>\n                                <div onClick={this.deleteTask}>✖</div>\n                                <input value={task.text} type='text' onChange={this.handleEdit}></input>\n                                <button type='submit'>submit</button>\n                            </form>\n                        )\n                    }                \n\n                    return (\n                    <li key={task.id} id={task.id} className='listItem'>\n                        {listItemContents}\n                    </li>\n                    );\n                })}\n            </ul>\n        );\n    };\n};\n\nexport default Overview;","import React from \"react\";\nimport uniqid from 'uniqid';\nimport Overview from './components/Overview'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      task: {\n        num: 1, \n        text: '',\n        id: uniqid(),\n        beingEdited: false\n      },\n      tasks: []\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      task: {\n        num: this.state.task.num,\n        text: e.target.value,\n        id: this.state.task.id\n      }\n    })\n  };\n\n  onSubmitTask = (e) => {\n    e.preventDefault();\n    const oldNum = this.state.task.num;\n\n    this.setState({\n      tasks: [...this.state.tasks, this.state.task],\n      task: {\n        num: oldNum + 1,\n        text: '',\n        id: uniqid(),\n        beingEdited: false\n      }\n    });\n  };\n\n  startEdit = (e) => {\n    const editedTaskNum = e.target.parentNode.id\n    const index = editedTaskNum - 1\n    const task = this.state.tasks[index]\n\n    task.beingEdited = true\n\n    const oldTasks = this.state.tasks\n    const newTasks = [...oldTasks.slice(0, index), task, ...oldTasks.slice(index + 1)]\n\n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  handleEdit = (e) => {\n    const editedTaskNum = Number(e.target.parentNode.id)\n    const index = editedTaskNum - 1\n    const task = this.state.tasks[index]\n\n    task.text = e.target.value\n\n    const oldTasks = this.state.tasks\n    const newTasks = [...oldTasks.slice(0, index), task, ...oldTasks.slice(index + 1)]\n\n    this.setState({\n      tasks: newTasks\n    });\n  }\n\n  onSubmitEdit = (e) => {\n    e.preventDefault();\n    const editedTaskNum = Number(e.target.id)\n    const index = editedTaskNum - 1\n    const task = this.state.tasks[index]\n\n    task.beingEdited = false\n\n    const oldTasks = this.state.tasks\n    const newTasks = [...oldTasks.slice(0, index), task, ...oldTasks.slice(index + 1)]\n\n    this.setState({\n      tasks: newTasks\n    });\n  };\n\n  deleteTask = (e) => {\n    const deletedId = e.target.parentNode.parentNode.id;\n    let newTasks = [];\n\n    // create new array of tasks (minus deleted task)\n    // and update each task's \"num\" property\n    for (let i = 0; i < this.state.tasks.length; i++) {\n      const task = this.state.tasks[i];\n\n      if (newTasks.length == 0) {\n        task.num = 1\n      } else {\n        task.num = newTasks[newTasks.length - 1].num + 1\n      };\n\n      if (task.id == deletedId) {\n        continue\n      } else {\n        newTasks = newTasks.concat(task);\n      }\n    };\n\n    // update state\n    if (newTasks.length == 0) {\n      this.setState({\n        tasks: [],\n        task: {\n          num: 1,\n          text: this.state.task.text,\n          id: this.state.task.id\n        }\n      });\n    } else {\n      this.setState({\n        tasks: newTasks,\n        task: {\n          num: newTasks[newTasks.length - 1].num + 1,\n          text: this.state.task.text,\n          id: this.state.task.id\n        }\n      });\n    };\n  }\n\n  render() {\n    return (\n      <div id='main'>\n        <h1>React Task App</h1>\n        <h2>A simple task tracker, built in React</h2>\n        <form id='inputBar' onSubmit={this.onSubmitTask}>\n          <label htmlFor='taskInput'>Enter task:</label>\n          <input\n            onChange={this.handleChange}\n            value={this.state.task.text}\n            type='text'\n            id='taskInput'\n          />\n          <button id='addTaskButton' type='submit'>Add Task</button>\n        </form>\n        <Overview \n          tasks={this.state.tasks}\n          deleteTask={this.deleteTask}\n          startEdit={this.startEdit}\n          handleEdit={this.handleEdit}\n          onSubmitEdit={this.onSubmitEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}